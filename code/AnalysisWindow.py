# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Analysis.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os
import threading
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from PyQt5.QtGui import QPixmap
from PyQt5.QtWidgets import QTreeWidgetItem
import matplotlib
matplotlib.use('TkAgg')
import matplotlib.pyplot as plt


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(971, 624)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.widget_4 = QtWidgets.QWidget(self.centralwidget)
        self.widget_4.setObjectName("widget_4")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.widget_4)
        self.verticalLayout.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout.setSpacing(1)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget = QtWidgets.QWidget(self.widget_4)
        self.widget.setObjectName("widget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget)
        self.horizontalLayout.setContentsMargins(1, 1, 1, 1)
        self.horizontalLayout.setSpacing(1)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setMinimumSize(QtCore.QSize(70, 17))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout.addWidget(self.label_2)
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        self.lineEdit.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit.setFont(font)
        self.lineEdit.setObjectName("lineEdit")
        self.horizontalLayout.addWidget(self.lineEdit)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.label_9 = QtWidgets.QLabel(self.widget)
        self.label_9.setMinimumSize(QtCore.QSize(80, 17))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_9.setFont(font)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout.addWidget(self.label_9)
        self.lineEdit_8 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_8.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_8.setFont(font)
        self.lineEdit_8.setText("")
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.horizontalLayout.addWidget(self.lineEdit_8)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.label_7 = QtWidgets.QLabel(self.widget)
        self.label_7.setMinimumSize(QtCore.QSize(60, 17))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_7.setFont(font)
        self.label_7.setObjectName("label_7")
        self.horizontalLayout.addWidget(self.label_7)
        self.lineEdit_6 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_6.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.horizontalLayout.addWidget(self.lineEdit_6)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem2)
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setMinimumSize(QtCore.QSize(95, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.verticalLayout.addWidget(self.widget)
        self.widget_2 = QtWidgets.QWidget(self.widget_4)
        self.widget_2.setObjectName("widget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.widget_2)
        self.horizontalLayout_2.setContentsMargins(1, 1, 1, 1)
        self.horizontalLayout_2.setSpacing(1)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_3 = QtWidgets.QLabel(self.widget_2)
        self.label_3.setMinimumSize(QtCore.QSize(50, 17))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_2.addWidget(self.label_3)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.widget_2)
        self.lineEdit_2.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.horizontalLayout_2.addWidget(self.lineEdit_2)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem3)
        self.label_10 = QtWidgets.QLabel(self.widget_2)
        self.label_10.setMinimumSize(QtCore.QSize(80, 17))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.horizontalLayout_2.addWidget(self.label_10)
        self.lineEdit_9 = QtWidgets.QLineEdit(self.widget_2)
        self.lineEdit_9.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_9.setFont(font)
        self.lineEdit_9.setText("")
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.horizontalLayout_2.addWidget(self.lineEdit_9)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem4)
        self.label_8 = QtWidgets.QLabel(self.widget_2)
        self.label_8.setMinimumSize(QtCore.QSize(60, 17))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_8.setFont(font)
        self.label_8.setObjectName("label_8")
        self.horizontalLayout_2.addWidget(self.label_8)
        self.lineEdit_7 = QtWidgets.QLineEdit(self.widget_2)
        self.lineEdit_7.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_7.setFont(font)
        self.lineEdit_7.setObjectName("lineEdit_7")
        self.horizontalLayout_2.addWidget(self.lineEdit_7)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_2.addItem(spacerItem5)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget_2)
        self.pushButton_2.setMinimumSize(QtCore.QSize(95, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout_2.addWidget(self.pushButton_2)
        self.verticalLayout.addWidget(self.widget_2)
        self.widget_3 = QtWidgets.QWidget(self.widget_4)
        self.widget_3.setObjectName("widget_3")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.widget_3)
        self.horizontalLayout_3.setContentsMargins(1, 1, 1, 1)
        self.horizontalLayout_3.setSpacing(1)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_4 = QtWidgets.QLabel(self.widget_3)
        self.label_4.setMinimumSize(QtCore.QSize(60, 17))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.horizontalLayout_3.addWidget(self.label_4)
        self.lineEdit_3 = QtWidgets.QLineEdit(self.widget_3)
        self.lineEdit_3.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.horizontalLayout_3.addWidget(self.lineEdit_3)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem6)
        self.label_5 = QtWidgets.QLabel(self.widget_3)
        self.label_5.setMinimumSize(QtCore.QSize(60, 17))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_3.addWidget(self.label_5)
        self.lineEdit_4 = QtWidgets.QLineEdit(self.widget_3)
        self.lineEdit_4.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.horizontalLayout_3.addWidget(self.lineEdit_4)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem7)
        self.label_6 = QtWidgets.QLabel(self.widget_3)
        self.label_6.setMinimumSize(QtCore.QSize(60, 17))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_3.addWidget(self.label_6)
        self.lineEdit_5 = QtWidgets.QLineEdit(self.widget_3)
        self.lineEdit_5.setMinimumSize(QtCore.QSize(100, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.horizontalLayout_3.addWidget(self.lineEdit_5)
        spacerItem8 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem8)
        self.pushButton_3 = QtWidgets.QPushButton(self.widget_3)
        self.pushButton_3.setMinimumSize(QtCore.QSize(95, 0))
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_3.setFont(font)
        self.pushButton_3.setObjectName("pushButton_3")
        self.horizontalLayout_3.addWidget(self.pushButton_3)
        self.verticalLayout.addWidget(self.widget_3)
        self.verticalLayout_2.addWidget(self.widget_4)
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Vertical)
        self.splitter.setObjectName("splitter")
        self.label = QtWidgets.QLabel(self.splitter)
        self.label.setMinimumSize(QtCore.QSize(256, 200))
        self.label.setText("")
        self.label.setObjectName("label")
        self.treeWidget = QtWidgets.QTreeWidget(self.splitter)
        font = QtGui.QFont()
        font.setFamily("Consolas")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.treeWidget.setFont(font)
        self.treeWidget.setObjectName("treeWidget")
        self.treeWidget.headerItem().setText(0, "1")
        self.verticalLayout_2.addWidget(self.splitter)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 971, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        # init
        self.init_GUI()
        self.init_signal_slot()

    def init_GUI(self):
        self.treeWidget.setHeaderHidden(True)
        self.treeWidget.clear()
        self.pro = []
        self.lineEdit.setText('0')
        self.lineEdit_2.setText('0')
        self.lineEdit_3.setText('0')
        self.lineEdit_4.setText('0')
        self.lineEdit_5.setText('0')
        self.lineEdit_6.setText('0')
        self.lineEdit_7.setText('0')
        self.lineEdit_8.setText('0')
        self.lineEdit_9.setText('0')
        self.statusbar.showMessage('分析中 ...')
        self.traffic = {}
        self.flag = False

    def init_signal_slot(self):
        self.pushButton_2.clicked.connect(self.draw_time_distribution)
        self.pushButton_3.clicked.connect(self.draw_traffic_distribution)
        self.pushButton.clicked.connect(self.plot_raw_pic)

    def analysis(self):
        if not self.pro:
            return
        else:
            self.pushButton_3.setEnabled(False)
            self.pushButton_2.setEnabled(False)
            t1 = threading.Thread(target=self.assmble_tree)
            t1.setDaemon(True)
            t1.start()

    def assmble_tree(self):
        self.treeWidget.clear()
        mac_addr = {}
        ip_addr = {}
        port_set = {}
        port_count = {}
        traffic_size = {}
        traffic_count = {}
        for item in self.pro:
            size = item.len
            protocol = item.protocol
            if protocol in traffic_size:
                traffic_size[protocol] += size
                traffic_count[protocol] += 1
            else:
                traffic_size[protocol] = size
                traffic_count[protocol] = 1
            if 'TCP' in protocol or 'UDP' in protocol:
                mac = item.src_mac
                ip = item.src_ip
                port = item.src_port

                if port in port_set:
                    port_set[port] += size
                    port_count[port] += 1
                else:
                    port_set[port] = size
                    port_count[port] = 1
                if ip in ip_addr:
                    ip_addr[ip].add(port)
                else:
                    ip_addr[ip] = set()
                    ip_addr[ip].add(port)

                if mac in mac_addr:
                    mac_addr[mac].add(ip)
                else:
                    mac_addr[mac] = set()
                    mac_addr[mac].add(ip)
            else:
                continue
        for mac_key in mac_addr:
            mac_tree = QTreeWidgetItem()
            mac_tree.setText(0, mac_key)
            self.treeWidget.addTopLevelItem(mac_tree)
            ip_set = mac_addr[mac_key]
            for ip_key in ip_set:
                ip_tree = QTreeWidgetItem()
                ip_tree.setText(0, ip_key)
                mac_tree.addChild(ip_tree)
                port_s = ip_addr[ip_key]
                for port_key in port_s:
                    port_tree = QTreeWidgetItem()
                    port_tree.setText(0, port_key + ':' + str(port_set[port_key])
                                      + ' bytes (' + str(port_count[port_key]) + ')条')
                    ip_tree.addChild(port_tree)

        for key in traffic_count:
            count = traffic_count[key]
            size = traffic_size[key]
            if 'TLS' in key:
                self.lineEdit.setText(str(size) + ' bytes (' + str(count) + '条)')
            elif 'DNS' in key:
                self.lineEdit_2.setText(str(size) + ' bytes (' + str(count) + '条)')
            elif 'HTTP' in key:
                self.lineEdit_3.setText(str(size) + ' bytes (' + str(count) + '条)')
            elif 'ICMP' in key:
                self.lineEdit_4.setText(str(size) + ' bytes (' + str(count) + '条)')
            elif 'OICQ' in key:
                self.lineEdit_5.setText(str(size) + ' bytes (' + str(count) + '条)')
            elif 'TCP' == key:
                self.lineEdit_6.setText(str(size) + ' bytes (' + str(count) + '条)')
            elif 'UDP' == key:
                self.lineEdit_7.setText(str(size) + ' bytes (' + str(count) + '条)')
            elif 'ARP' == key:
                self.lineEdit_9.setText(str(size) + ' bytes (' + str(count) + '条)')
            else:
                self.lineEdit_8.setText(str(size) + ' bytes (' + str(count) + '条)')
        self.traffic = traffic_count
        self.pushButton_3.setEnabled(True)
        self.pushButton_2.setEnabled(True)
        self.statusbar.showMessage('分析完毕')

    def draw_traffic_distribution(self):
        self.flag = False
        self.plot_traffic_distribution()
        cache = './Cache/'
        if os.path.exists(cache + 'traffic.png'):
            pixmap = QPixmap(cache + 'traffic.png')
            self.label.setPixmap(pixmap)
            self.label.setAlignment(Qt.AlignCenter)
            self.label.setScaledContents(True)

    def plot_raw_pic(self):
        self.flag = not self.flag
        if self.flag:
            self.plot_traffic_distribution(True)
        else:
            self.plot_time_seq(True)

    def plot_traffic_distribution(self, show_flag=False):
        if not self.traffic:
            return
        cache = './Cache/'
        if not os.path.exists(cache):
            os.mkdir(cache)
        name_list = list(self.traffic.keys())
        num_list = list(self.traffic.values())
        plt.figure(figsize=(10, 4))
        plt.bar(range(len(num_list)), num_list, tick_label=name_list, color=['r', 'g', 'b'])
        plt.grid(True)
        plt.xticks(rotation=15)
        plt.ylabel('traffic size(Bytes)')
        if show_flag:
            plt.show()
        else:
            plt.savefig(cache + 'traffic.png', dpi=100)
        plt.close()

    def plot_time_seq(self,  show_flag=False):
        if not self.time:
            return
        cache = './Cache/'
        if not os.path.exists(cache):
            os.mkdir(cache)
        name_list = list(self.time.keys())
        num_list = list(self.time.values())
        plt.figure(figsize=(10, 4))
        plt.bar(range(len(num_list)), num_list, tick_label=name_list, color=['r', 'g', 'b'])
        plt.grid(True)
        plt.xticks(rotation=15)
        plt.ylabel('traffic size(Bytes)')

        if show_flag:
            plt.show()
        else:
            plt.savefig(cache + 'time.png', dpi=100)
        plt.close()

    def draw_time_distribution(self):
        self.flag = True
        if not self.pro:
            return
        else:
            size = {}
            for i in range(24):
                size[i] = 0
            for item in self.pro:
                time = int(item.time.split(' ')[-1].split(':')[0])
                size[time] += item.len
        self.time = size
        self.plot_time_seq()
        cache = './Cache/'
        if os.path.exists(cache + 'time.png'):
            pixmap = QPixmap(cache + 'time.png')
            self.label.setPixmap(pixmap)
            self.label.setAlignment(Qt.AlignCenter)
            self.label.setScaledContents(True)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "综合分析系统"))
        self.label_2.setText(_translate("MainWindow", "SSL/TLS"))
        self.label_9.setText(_translate("MainWindow", "其它"))
        self.label_7.setText(_translate("MainWindow", "TCP"))
        self.pushButton.setText(_translate("MainWindow", "查看原图"))
        self.label_3.setText(_translate("MainWindow", "DNS"))
        self.label_10.setText(_translate("MainWindow", "ARP"))
        self.label_8.setText(_translate("MainWindow", "UDP"))
        self.pushButton_2.setText(_translate("MainWindow", "时间分布图"))
        self.label_4.setText(_translate("MainWindow", "HTTP"))
        self.label_5.setText(_translate("MainWindow", "ICMP"))
        self.label_6.setText(_translate("MainWindow", "OICQ"))
        self.pushButton_3.setText(_translate("MainWindow", "流量分布图"))
